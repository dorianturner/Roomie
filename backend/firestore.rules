rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Conversations
    match /conversations/{conversationId} {
      allow read: if request.auth != null &&
                    request.auth.uid in resource.data.participants;

      allow write: if request.auth != null &&
                    request.auth.uid in request.resource.data.participants;

      match /messages/{messageId} {
        allow read, write, create: if request.auth != null &&
          request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
      }
    }

    // User profiles
    match /users/{userId} {
      allow read, create: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }
    
    // Groups
    match /groups/{groupId} {
      allow read: if request.auth != null;

      // --- Create ---
      // User can create their singleton group if the docId == their uid
      allow create: if request.auth != null && request.auth.uid == groupId;

      // --- Update/Delete ---
      allow update, delete: if request.auth != null && (
        // 1. user belongs to this group
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groupId == groupId ||

        // 2. this group is mergingWith the userâ€™s current group
        get(/databases/$(database)/documents/groups/$(groupId)).data.mergingWith ==
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groupId
      );
    }
	}
}